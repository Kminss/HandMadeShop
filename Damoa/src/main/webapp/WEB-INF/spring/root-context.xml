<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:annotation-config />
<context:component-scan base-package="com.javajaba.damoa"> 
<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
</context:component-scan>  
	<!-- jdbc bean -->
	<bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSourceSpeid" destroy-method="clone">
		<property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />
		<property name="username" value="scott" />
		<property name="password" value="tiger" />
	</bean>
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource"> 
    <constructor-arg ref="dataSourceSpeid" /> 
    <property name="logFormatter"> 
        <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter"> 
            <property name="loggingType" value="MULTI_LINE" /> 
            <property name="sqlPrefix" value="SQL : "/> 
        </bean> 
    </property> 
</bean>
	
	<!--팩토리에서 Bean 객체로 호출한 결과를 반환한다. -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--Configuration 설정 파일을 연결한다. -->
		<property name="configLocation"
			value="classpath:/configuration/Config.xml" />
			 
			<!--Mapper 설정 파일을 연결한다. -->
		<property name="mapperLocations"
			value="classpath:/mapper/*Mapper.xml" />
	</bean>
	<!--SqlSession 인터페이스의 인스턴스를 대체하여 데이터베이스의 SQL 명령어를 실행한다. -->
	<bean class="org.mybatis.spring.SqlSessionTemplate"
		id="sqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactoryBean" />
	</bean>
	<!-- 트랜잭션매니저 설정 -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	</beans>
